<?xml version="1.0" encoding="utf-8"?><testsuites><testsuite name="pytest" errors="0" failures="2" skipped="1" tests="70" time="39.276" timestamp="2021-06-13T21:56:21.549369" hostname="LAPTOP-9MKQQPJI"><testcase classname="tests.test_order" name="test_bar" time="0.799" /><testcase classname="tests.test_order" name="test_foo" time="0.001" /><testcase classname="tests.test_container" name="test_smoke" time="0.003" /><testcase classname="tests.test_container" name="test_regression" time="0.002" /><testcase classname="tests.test_demo1" name="test_firstProgram" time="0.001" /><testcase classname="tests.test_demo1" name="test_secondgreetcreditCard" time="0.001" /><testcase classname="tests.test_demo1" name="test_crossbrowser[crossbrowser0]" time="0.002" /><testcase classname="tests.test_demo1" name="test_crossbrowser[crossbrowser1]" time="0.002" /><testcase classname="tests.test_demo1" name="test_crossbrowser[crossbrowser2]" time="0.001" /><testcase classname="tests.test_demo2" name="test_firstprogram" time="0.001"><skipped type="pytest.skip" message="unconditional skip">C:\PycharmProjects\pomproject\tests\test_demo2.py:4: unconditional skip</skipped></testcase><testcase classname="tests.test_demo2" name="test_secondcreditcard" time="0.001" /><testcase classname="tests.test_fixturedata.TestExample2" name="test_editprofile" time="0.003" /><testcase classname="tests.test_fixturedemo.TestExample" name="test_fixturedemo" time="0.006" /><testcase classname="tests.test_fixturedemo.TestExample" name="test_fixturedemo1" time="0.001" /><testcase classname="tests.test_fixturedemo.TestExample" name="test_fixturedemo2" time="0.003" /><testcase classname="tests.test_fixturedemo.TestExample" name="test_fixturedemo3" time="0.010" /><testcase classname="tests.test_flaky" name="test_example1" time="0.003" /><testcase classname="tests.test_flaky" name="test_example" time="0.003" /><testcase classname="tests.test_home_page_title.TestHomePageTitle" name="test_login_page_title" time="14.761" /><testcase classname="tests.test_login_page_title.TestLoginPageTitle" name="test_login_page_title" time="20.788" /><testcase classname="tests.test_rerun" name="test_num[0]" time="0.004" /><testcase classname="tests.test_rerun" name="test_num[1]" time="0.006" /><testcase classname="tests.test_rerun" name="test_num[2]" time="0.004" /><testcase classname="tests.test_rerun" name="test_num[3]" time="0.004" /><testcase classname="tests.test_rerun" name="test_num[4]" time="0.004" /><testcase classname="tests.test_rerun" name="test_num[5]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[6]" time="0.002" /><testcase classname="tests.test_rerun" name="test_num[7]" time="0.002" /><testcase classname="tests.test_rerun" name="test_num[8]" time="0.003" /><testcase classname="tests.test_rerun" name="test_num[9]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[10]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[11]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[12]" time="0.003" /><testcase classname="tests.test_rerun" name="test_num[13]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[14]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[15]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[16]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[17]" time="0.001"><failure message="Failed: bad luck">i = 17

    @pytest.mark.parametrize("i", range(50))
    def test_num(i):
        if i in (17, 25):
&gt;           pytest.fail("bad luck")
E           Failed: bad luck

tests\test_rerun.py:7: Failed</failure></testcase><testcase classname="tests.test_rerun" name="test_num[18]" time="0.002" /><testcase classname="tests.test_rerun" name="test_num[19]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[20]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[21]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[22]" time="0.002" /><testcase classname="tests.test_rerun" name="test_num[23]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[24]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[25]" time="0.001"><failure message="Failed: bad luck">i = 25

    @pytest.mark.parametrize("i", range(50))
    def test_num(i):
        if i in (17, 25):
&gt;           pytest.fail("bad luck")
E           Failed: bad luck

tests\test_rerun.py:7: Failed</failure></testcase><testcase classname="tests.test_rerun" name="test_num[26]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[27]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[28]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[29]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[30]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[31]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[32]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[33]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[34]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[35]" time="0.002" /><testcase classname="tests.test_rerun" name="test_num[36]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[37]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[38]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[39]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[40]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[41]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[42]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[43]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[44]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[45]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[46]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[47]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[48]" time="0.001" /><testcase classname="tests.test_rerun" name="test_num[49]" time="0.117" /></testsuite></testsuites>